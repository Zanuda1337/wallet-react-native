import { useContext, useEffect, useRef } from "react";import { Animated } from "react-native";import TimingAnimationConfig = Animated.TimingAnimationConfig;import { useAppSelector } from "src/store/hooks";import {ThemeContext} from "src/providers/themeProvider/ThemeProvider";import {useIntl} from "react-intl";export const useTransition = (  from: number,  to: number,  condition: boolean,  config: Omit<TimingAnimationConfig, "toValue" | "useNativeDriver"> = {    duration: 200,  }) => {  const value = useRef(new Animated.Value(from)).current;  useEffect(() => {    Animated.timing(value, {      ...config,      toValue: condition ? to : from,      useNativeDriver: false,    }).start();  }, [condition]);  return value;};export const useFormatMoney = () => {  const currency = useAppSelector((state) => state.settingsReducer.currency);  const intl = useIntl()  return (value: number) => intl.formatNumber(value, {currency, maximumFractionDigits: 2, style: 'currency', currencyDisplay: "symbol"});};export const useTheme = () => useContext(ThemeContext);export const useStyles = (callback) => {  const theme = useTheme();  return callback(theme);};