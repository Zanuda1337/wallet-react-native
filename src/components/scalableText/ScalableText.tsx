import React, {useCallback, useEffect, useState} from "react";import {	LayoutChangeEvent,	StyleProp,	Text,	TextStyle,	View,	ViewStyle} from "react-native";type TScalableTextProps = {  children: string | number | JSX.Element;  maxWidth: number,	styles?: {root?: StyleProp<ViewStyle>, text?: StyleProp<TextStyle>}};const ScalableText: React.FC<TScalableTextProps> = ({ children, maxWidth, styles }) => {  const [width, setWidth] = useState(0);  const [initialFontSize] = useState(styles?.text['fontSize'] || 14)	const [fontSize, setFontSize] = useState(initialFontSize);	useEffect(() => {		if(width > maxWidth) {			setFontSize(fontSize-1);			return;		}		if(width < maxWidth - (maxWidth*0.8)) {			setFontSize(fontSize+1)		}	}, [width, maxWidth]);	const handleLayout = useCallback((event: LayoutChangeEvent) => {		setWidth(event.nativeEvent.layout.width);	}, [fontSize])  return (    <View      style={[styles?.root]}      onLayout={handleLayout}    >	    <Text style={[styles?.text, {fontSize}]}>{children}</Text>    </View>  );};export default ScalableText;