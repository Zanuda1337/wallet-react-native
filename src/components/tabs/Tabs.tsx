import React, { useEffect, useRef, useState } from "react";import {Animated, Dimensions, View} from "react-native";import { useStyles, useTheme } from "src/hooks";import { tabsStyles } from "src/components/tabs/style";import { createArray } from "src/utils";import Button from "src/components/button/Button";type TTabsProps = {  value: string;  tabs: { value: string; color: string, label: string }[];  onChange: (value: string) => void;};const Tabs: React.FC<TTabsProps> = ({ value, tabs, onChange }) => {  const style = useStyles(tabsStyles);  const theme = useTheme();  const [width, setWidth] = useState(Dimensions.get("screen").width - theme.styles.container.paddingHorizontal * 2);  const itemWidth = width / tabs.length;  const activeTab = tabs.find((t) => t.value === value);  const index = tabs.indexOf(activeTab);  const left = useRef(new Animated.Value(itemWidth * index + 1)).current;  const color = useRef(new Animated.Value(index)).current;  useEffect(() => {    Animated.timing(left, {      duration: 150,      toValue: itemWidth * index + 1,      useNativeDriver: false,    }).start();    Animated.timing(color, {      duration: 150,      toValue: index,      useNativeDriver: false,    }).start();  }, [index, itemWidth]);  return (    <View onLayout={(e) => setWidth(e.nativeEvent.layout.width)}>      <View style={[style.horizontal, style.columns]}>        {tabs.map((tab) => (          <Button	          key={tab.value}            variant="ghost"            styles={{ root: style.column, text: style.columnTitle }}            text={tab.label}            onPress={() => onChange(tab.value)}          />        ))}      </View>      <Animated.View        style={[          style.border,          {            width: itemWidth,            left,            borderBottomColor: color.interpolate({              inputRange: createArray(tabs.length, 0),              outputRange: tabs.map((t) => t.color),            }),          },        ]}      />    </View>  );};export default Tabs;