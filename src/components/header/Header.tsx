import React from "react";import { style } from "./style";import {StyleProp, StyleSheet, Text, View, ViewStyle} from "react-native";import { theme } from "src/assets/styles/theme";import SvgSelector from "src/components/svgSelector/SvgSelector";import IconButton, {  IIconButtonProps,} from "src/components/iconButton/IconButton";interface IHeaderButton extends IIconButtonProps {  visible?: boolean;}type THeaderProps = {  leftButtonProps?: IHeaderButton;  rightButtonProps?: IHeaderButton;  label: string;  styles?: {root: StyleProp<ViewStyle>}};const Header: React.FC<THeaderProps> = ({  label,  leftButtonProps = {    visible: true,    icon: <SvgSelector id="arrow" fill={theme.colors.foreground} size={16} />,  },  rightButtonProps = {    visible: true,    icon: (      <SvgSelector id="services" stroke={theme.colors.foreground} size={20} />    ),  },  styles}) => {  const leftButtonWithDefaults = {    visible: true,    icon: <SvgSelector id="arrow" fill={theme.colors.foreground} size={16} />,    ...leftButtonProps,  };  const rightButtonWithDefaults = {    visible: true,    icon: (      <SvgSelector id="services" stroke={theme.colors.foreground} size={20} />    ),    ...rightButtonProps,  };  const headerStyle = StyleSheet.compose({ ...style.header, ...theme.styles.container }, styles?.root);  return (    <View style={headerStyle}>      {leftButtonWithDefaults.visible ? (        <IconButton {...leftButtonWithDefaults} />      ) : (        <View />      )}      <View pointerEvents='none'        style={{          position: "absolute",          display: "flex",          flexDirection: "row",          justifyContent: "center",          alignItems: "center",          width: '100%',          left: headerStyle['paddingHorizontal']        }}      >        <Text style={style.headerTitle}>{label}</Text>      </View>      {rightButtonWithDefaults.visible ? (        <IconButton {...rightButtonWithDefaults} />      ) : (        <View />      )}    </View>  );};export default Header;