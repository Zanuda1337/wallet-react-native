import React from "react";import { Text, View } from "react-native";import { useStyles, useTheme } from "src/hooks";import { histogramStyles } from "src/components/chart/histogram/style";type TBarProps = {  height: number;  a: number;  b: number;  label: string;  zoom: number;  displayHeight: number;  isActive: boolean;  isEnabled: boolean;  isLast: boolean;  isPale: boolean;  onPress: () => void;};const Bar: React.FC<TBarProps> = ({  height,  a,  b,  label,  zoom,  displayHeight,  isActive,  isEnabled,  isPale,  isLast,  onPress,}) => {  const style = useStyles(histogramStyles);  const theme = useTheme();  const aHeight = (a / displayHeight) * height * zoom;  const bHeight = (b / displayHeight) * height * zoom;  const signPos = Math.max(aHeight, bHeight);  return (    <View      style={[        style.itemContainer,        {opacity: isPale ? 1 : 0.5,        }      ]}      onTouchEnd={onPress}    >      {isActive && <View style={[style.separator, {height, right: isLast ? 0: undefined}]}>        {isFinite(signPos) && !!signPos && !isLast &&        <View style={[style.top, {bottom: signPos, }]}/>}      </View>}      <View style={[style.barWrapper, { height, backgroundColor: isEnabled ? theme.colors.foreground + '10' : 'transparent' }]}>        <View          style={[            style.bar,            {              height: isFinite(bHeight) ? bHeight : 0,              backgroundColor: theme.colors.error,              left: 2.5,            },          ]}        />        <View          style={[            style.bar,            {              height: isFinite(aHeight) ? aHeight : 0,              right: 2.5,              backgroundColor: theme.colors.blue,            },          ]}        />      </View>      <View style={style.labelWrapper}>        <Text style={style.label}>{label}</Text>      </View>    </View>  );};export default Bar;