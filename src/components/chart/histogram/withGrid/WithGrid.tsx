import React from "react";import { Text, View } from "react-native";import {createArray, formatMoney} from "src/utils";import {useStyles, useTheme} from "src/hooks";import {histogramStyles} from "src/components/chart/histogram/style";type TWithGridProps = {	zoom: number;	displayHeight: number;	height: number;	children: JSX.Element;	sidebarVisible?: boolean};const WithGrid: React.FC<TWithGridProps> = ({zoom, displayHeight, height,children, sidebarVisible = true}) => {	const theme = useTheme();	const style = useStyles(histogramStyles)	const steps = 5;	const step = isFinite(displayHeight / steps / zoom) ? (displayHeight / steps / zoom) || 0 : 1000;	const stepsArray = createArray(steps, step, step).map(step => Math.round(step)).reverse();	return (    <>	    <View>		    {stepsArray.map((step, index) => (			    <View				    key={index}				    style={{					    ...style.stepLine,					    top: (height / steps) * index,					    height: height / steps,				    }}			    />		    ))}		    <View			    style={{				    ...style.stepLine,				    top: height,				    height: height / steps,			    }}		    />	    </View>	    {sidebarVisible && <View style={{		    backgroundColor: theme.colors.background,		    position: "absolute",		    zIndex: 1,		    paddingBottom: 30	    }}>		    {stepsArray.map((step, index) => (			    <View				    key={index}				    style={{					    ...style.step,					    height: height / steps,				    }}			    >				    <Text style={style.label}>{step ? formatMoney(step) : ''}</Text>			    </View>		    ))}		    <View style={style.step}>			    <Text style={style.label}>0</Text>		    </View>	    </View>}	    {children}    </>  );};export default WithGrid;