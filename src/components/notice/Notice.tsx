import React, { useEffect, useRef, useState } from "react";import { Dimensions, Text } from "react-native";import { useStyles, useTheme, useTransition } from "src/hooks";import { noticeStyles } from "src/components/notice/style";import SvgSelector from "src/components/svgSelector/SvgSelector";import { TNotice } from "src/components/notice/Notice.types";import { Animated } from "react-native";interface INoticeProps extends Omit<TNotice, "id"> {}const Notice: React.FC<INoticeProps> = ({ type, message, animating }) => {  const transaction = useRef(new Animated.Value(1)).current;  const style = useStyles(noticeStyles);  const theme = useTheme();  useEffect(() => {    Animated.timing(transaction, {      duration: 150,      toValue: 0,      useNativeDriver: false,    }).start();  }, []);  useEffect(() => {    if (!animating) return;    Animated.timing(transaction, {      duration: 150,      toValue: 1,      useNativeDriver: false,    }).start();  }, [animating]);  return (    <Animated.View      style={[        style.container,        style[type],        {          left: transaction.interpolate({            inputRange: [0, 1],            outputRange: [0, -Dimensions.get("screen").width],          }),        },      ]}      pointerEvents="auto"    >      <SvgSelector        id="warning"        size={20}        fill={theme.colors.independentForeground}      />      <Text style={style.message}>{message}</Text>    </Animated.View>  );};export default Notice;