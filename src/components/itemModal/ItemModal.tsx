import React from "react";import { Modal, View } from "react-native";import { theme } from "src/assets/styles/theme";import {  TItem,  TItemCategories,} from "features/transactions/Transactions.types";import { style } from "./style";import Header from "src/components/header/Header";import { ITEM_COLORS } from "features/transactions/Transactions.consts";import Form from "src/components/form/Form";import RenderIconSelector from "src/components/form/renderIconSelector/RenderIconSelector";import SvgSelector from "src/components/svgSelector/SvgSelector";type TItemModalProps = {  initialValues: Pick<TItem, "name" | "icon">;  visible: boolean;  label: string;  itemType: TItemCategories;  onClose: () => void;  onSubmit: (item: Pick<TItem, "name" | "icon">) => void;  onDelete?: () => void;};const ItemModal: React.FC<TItemModalProps> = ({  visible,  initialValues,  label,  itemType,  onClose,  onDelete,  onSubmit,}) => (  <Modal visible={visible}>    {visible && (      <>        <View style={{ marginBottom: 15 }}>          <Header            label={label}            leftButtonProps={{ onPress: onClose, visible: true }}            rightButtonProps={              onDelete                ? {                    onPress: onDelete,                    icon: (                      <SvgSelector                        id="delete"                        size={25}                        fill={theme.colors.foreground}                      />                    ),                  }                : { visible: false }            }          />        </View>        <View style={[style.container, theme.styles.container]}>          <Form            fields={[              {                name: "name",                rules: { required: "REQUIRED_FIELD" },                initialValue: initialValues.name,              },              {                name: "icon",                component: RenderIconSelector,                initialValue: initialValues.icon,                props: { backgroundColor: ITEM_COLORS[itemType] },              },            ]}            onSubmit={onSubmit}          />        </View>      </>    )}  </Modal>);export default ItemModal;