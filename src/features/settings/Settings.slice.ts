import { createSlice, PayloadAction } from "@reduxjs/toolkit";import { getLocales } from "expo-localization";import { LOCALES } from "src/consts";import { ListStyle } from "features/settings/Settings.types";export const defaultColors = {  primary: "#3660c1",  secondary: "#DD82EC",  background: "#232323",  foreground: "#ffffff",  subtext: "#b1b1b1",  icons: "#e0e0e0",  pale: "#6a6a6a",  paleText: "#d7d7d7",  blue: "#0d91c6",  green: "#47bb72",  red: "#db5647",  gray: "#585858",  lightgray: "#313131",  error: "#ff7262",  warning: "#efb127",  commonShadow: "#000000",  popUp: "#313131",  checkboxChecked: "#fff",  independentForeground: "#fff",  selectBackground: "#313131",  success: "#26DD38",  primaryLight: "#a9c1fa",  foregroundDark: "#444d5a",};interface SettingsState {  theme: "system" | "light" | "dark" | "user";  locale: string;  currency: string;  layout: {    transactions: {      income: { list: ListStyle };      wallet: { list: ListStyle };      expense: { list: ListStyle };    };  };  userTheme: typeof defaultColors;  initialized: boolean;}const initialState: SettingsState = {  theme: "system",  locale: "en",  currency: "USD",  layout: {    transactions: {      income: { list: "horizontal" },      wallet: { list: "horizontal" },      expense: { list: "vertical" },    },  },  userTheme: defaultColors,  initialized: false,};const currencies = ["USD", "RUB"];const settingsSlice = createSlice({  name: "settingsReducer",  initialState,  reducers: {    setSettings: (      state,      action: PayloadAction<{        theme: "system" | "light" | "dark" | "user";        locale: string;        currency: string;      }>    ) => {      state.theme = action.payload.theme;      state.locale = action.payload.locale;      state.currency = action.payload.currency;    },    setLayout: (      state,      action: PayloadAction<{        income: ListStyle;        wallet: ListStyle;        expense: ListStyle;      }>    ) => {      state.layout = {        transactions: {          income: { list: action.payload.income },          wallet: { list: action.payload.wallet },          expense: { list: action.payload.expense },        },      };    },    setThemeColor: (state, action: PayloadAction<{ colorName: keyof typeof defaultColors, color: string }>) => {      if(!state.userTheme) state.userTheme = defaultColors;      state.userTheme[action.payload.colorName] = action.payload.color;    },    setTheme: (state, action: PayloadAction<typeof defaultColors>) => {      state.userTheme = action.payload;    },    init: (state) => {      const systemLocale = getLocales()[0];      const defaultLocale = LOCALES.map(({ locale }) => locale).includes(        systemLocale?.languageCode      )        ? systemLocale?.languageCode        : "en";      const defaultTheme = "system";      const defaultCurrency = currencies.includes(systemLocale?.currencyCode)        ? systemLocale?.currencyCode        : "USD";      state.theme = defaultTheme;      state.locale = defaultLocale;      state.currency = defaultCurrency;      state.initialized = true;    },    import: (state, action: PayloadAction<SettingsState>) => {      state.initialized = action.payload.initialized;      state.currency = action.payload.currency;      state.locale = action.payload.locale;      state.theme = action.payload.theme;    },  },});export const { actions: settingsActions, reducer: settingsReducer } =  settingsSlice;